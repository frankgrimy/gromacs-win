# This workflow is triggered on a tag in the upstream repository. It builds the Windows version of GROMACS using the latest MSVC compiler.
name: Build on upstream tag

env:
  CMAKE_VERSION: 3.28.0
  NINJA_VERSION: 1.12.1
  BUILD_TYPE: Release
  CCACHE_VERSION: 4.10.2
  NINJA_STATUS: "[%f/%t %o/sec] "

on:
  schedule:
    - cron: '0 0 * * 0' # Run every Sunday at midnight
  workflow_dispatch:

jobs:
  sync-and-build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC", artifact: "Windows-MSVC.zip",
            os: windows-2019,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            gpu_var: "Off",
            openmp_var: "Off"
          }

    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
      CI_JOB_ID: ${{ github.sha }} # Tell CMake it's running in CI
      OPENMP_VAR: ${{ matrix.config.openmp_var }}
      GPU_VAR: ${{ matrix.config.gpu_var }}
      ENVIRONMENT_SCRIPT: ${{ matrix.config.environment_script }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Set up Git
      run: |
        git remote add upstream https://github.com/gromacs/gromacs.git
        git fetch upstream --tags

    - name: Sync with upstream
      run: |
        git checkout main
        git pull upstream main
        git push origin main
      
    - name: Check out the latest tag
      run: |
        $TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
        git checkout $TAG
        echo "TAG=$TAG" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    # - name: Verify if the tag already exists in the fork
    #   env:
    #     TAG: ${{ env.TAG }}
    #   run: |
        
    - name: Download Ninja, CMake, and CCache
      run: cmake -P .github/scripts/download-ninja-cmake.cmake

    - name: ccache cache files
      uses: actions/cache@v4
      with:
        path: .ccache
        key: ${{ matrix.config.name }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ matrix.config.name }}-ccache-

    - name: Configure
      run: cmake -P .github/scripts/configure.cmake

    - name: Build
      run: cmake -P .github/scripts/build.cmake

    - name: Run tests
      run: cmake -P .github/scripts/test.cmake

    - name: Download FFTW
      run: |
        $FFTW_VERSION="3.3.5"
        echo "FFTW_VERSION=$FFTW_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        #$FFTW_URL=https://fftw.org/pub/fftw/fftw-$FFTW_VERSION-dll64.zip
        curl https://fftw.org/pub/fftw/fftw-$FFTW_VERSION-dll64.zip -o fftw-$FFTW_VERSION-dll64.zip
        Expand-Archive -Path fftw-$FFTW_VERSION-dll64.zip -DestinationPath .\fftw-$FFTW_VERSION

    - name: Move built files and dependencies to artifacts
      run: |
        mkdir -p artifacts\gromacs-win-$env:TAG\share\gromacs
        mkdir artifacts\gromacs-win-$env:TAG\bin
        mkdir artifacts\gromacs-win-$env:TAG\lib

        mv .\share\template .\artifacts\gromacs-win-$env:TAG\share\gromacs
        mv .\share\top .\artifacts\gromacs-win-$env:TAG\share\gromacs

        mv .\fftw-$env:FFTW_VERSION\libfftw3f-3.dll .\artifacts\gromacs-win-$env:TAG\bin
        mv .\build\bin\gmx.exe .\artifacts\gromacs-win-$env:TAG\bin
        
        mv .\build\lib\gmx.exp .\artifacts\gromacs-win-$env:TAG\lib
        mv .\build\lib\gmx.lib .\artifacts\gromacs-win-$env:TAG\lib
        mv .\build\lib\gromacs.lib .\artifacts\gromacs-win-$env:TAG\lib
        mv .\build\lib\muparser.lib .\artifacts\gromacs-win-$env:TAG\lib

        Compress-Archive -Path .\artifacts\gromacs-win-$env:TAG -DestinationPath .\artifacts\gromacs-win-$env:TAG.zip

    - name: Save build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gromacs-win-${{ env.TAG }}
        path: artifacts

    - name: Create release
      uses: softprops/action-gh-release@v2  
      with:
        tag_name: ${{ env.TAG }}
        name: ${{ env.TAG }}
        files: | 
          ./artifacts/gromacs-win-${{ env.TAG }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
